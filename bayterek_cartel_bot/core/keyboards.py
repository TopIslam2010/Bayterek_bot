# core/keyboards.py

from aiogram.types import (
    InlineKeyboardButton,
    InlineKeyboardMarkup,
    ReplyKeyboardMarkup,
    KeyboardButton
)

CAPTCHA_EMOJI = "‚è∞"

def generate_captcha_keyboard() -> InlineKeyboardMarkup:
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –∫–∞–ø—á–∏ —Å –æ–¥–Ω–∏–º –≤–µ—Ä–Ω—ã–º –≤–∞—Ä–∏–∞–Ω—Ç–æ–º."""
    buttons = [
        InlineKeyboardButton(text="üçé", callback_data="captcha_üçé"),
        InlineKeyboardButton(text="‚è∞", callback_data="captcha_‚è∞"),
        InlineKeyboardButton(text="üçè", callback_data="captcha_üçè"),
        InlineKeyboardButton(text="üçä", callback_data="captcha_üçä"),
    ]
    keyboard = InlineKeyboardMarkup(inline_keyboard=[buttons])
    return keyboard

def generate_city_keyboard() -> InlineKeyboardMarkup:
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ –≥–æ—Ä–æ–¥–∞."""
    buttons = [
        [InlineKeyboardButton(text="–ê–ª–º–∞—Ç—ã", callback_data="city_–ê–ª–º–∞—Ç—ã")],
        [InlineKeyboardButton(text="–ê—Å—Ç–∞–Ω–∞", callback_data="city_–ê—Å—Ç–∞–Ω–∞")],
    ]
    keyboard = InlineKeyboardMarkup(inline_keyboard=buttons)
    return keyboard

def generate_main_menu_keyboard() -> ReplyKeyboardMarkup:
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –æ—Å–Ω–æ–≤–Ω—É—é Reply-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –º–µ–Ω—é."""
    buttons = [
        [KeyboardButton(text="üõí –ö–∞—Ç–∞–ª–æ–≥ —Ç–æ–≤–∞—Ä–æ–≤")],
        [KeyboardButton(text="üîó –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞"), KeyboardButton(text="üõ† –ü–æ–¥–¥–µ—Ä–∂–∫–∞")]
    ]
    keyboard = ReplyKeyboardMarkup(keyboard=buttons, resize_keyboard=True)
    return keyboard

def generate_products_keyboard(products: dict) -> InlineKeyboardMarkup:
    """
    –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å —Ç–æ–≤–∞—Ä–∞–º–∏ –∏–∑ –∫–∞—Ç–∞–ª–æ–≥–∞.
    –ï—Å–ª–∏ –∫–∞—Ç–∞–ª–æ–≥ –ø—É—Å—Ç, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—É—Å—Ç—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É.
    """
    if not products:
        return InlineKeyboardMarkup(inline_keyboard=[[
            InlineKeyboardButton(text="–ö–∞—Ç–∞–ª–æ–≥ –ø—É—Å—Ç", callback_data="catalog_empty")
        ]])
        
    buttons = []
    for product_id, product_data in products.items():
        button = InlineKeyboardButton(text=product_data.get("name", "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–æ–≤–∞—Ä"), callback_data=f"product_{product_id}")
        buttons.append([button])
        
    return InlineKeyboardMarkup(inline_keyboard=buttons)

def generate_weight_keyboard(product_id: str, weights: dict) -> InlineKeyboardMarkup:
    """
    –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ –≤–µ—Å–∞ —Ç–æ–≤–∞—Ä–∞.
    """
    buttons = []
    for weight, price in weights.items():
        button_text = f"{weight} –≥—Ä. - {price} —Ä—É–±."
        callback_data = f"buy_{product_id}_{weight}"
        buttons.append(InlineKeyboardButton(text=button_text, callback_data=callback_data))
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥" –¥–ª—è —É–¥–æ–±–Ω–æ–π –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    buttons.append(InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_catalog"))
    
    # –û–±–æ—Ä–∞—á–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫–∏ –≤ —Å–ø–∏—Å–æ–∫ —Å–ø–∏—Å–∫–æ–≤, —á—Ç–æ–±—ã –æ–Ω–∏ —Ä–∞—Å–ø–æ–ª–∞–≥–∞–ª–∏—Å—å –ø–æ –æ–¥–Ω–æ–π –≤ —Å—Ç—Ä–æ–∫–µ
    inline_keyboard = [[button] for button in buttons]
    
    return InlineKeyboardMarkup(inline_keyboard=inline_keyboard)
